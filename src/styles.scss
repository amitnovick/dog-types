$body-bg-color: darken(white, 15%);
$choice-font-size: 2rem;
$color: #c97f20;

* {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  background-color: $body-bg-color;
  margin: 0;
}

#root {
  padding: 0.5rem;
  height: 100%;
  width: 100%;
}

.top-bar-container {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-bottom: 0.5rem;
}

.top-bar {
  width: 100%;
  max-width: 30rem;
  display: flex;
  justify-content: space-between;
}

%deck {
  height: 6rem;
  max-height: 100%;
  min-height: 2rem;
  width: 6rem;
  max-width: 100%;
  min-width: 2rem;
}

.all {
  @extend %deck;
  color: grey;
}

.success {
  @extend %deck;
  color: green;
  &[data-state="consuming"] {
    transform: scale(1.2);
    opacity: 0.5;
  }
}

.fail {
  @extend %deck;
  color: red;
  &[data-state="consuming"] {
    transform: scale(1.2);
    opacity: 0.5;
  }
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: auto;
  width: 100%;
  padding: 1.5rem;
  opacity: 0;

  position: relative;

  &[data-state="moving"] {
    /* TODO: use this! */
    position: static;
  }
}

.card-background {
  /* The commented out properties should solve issues */
  /* 
  1. Parent card has `padding` that influences this background element's top position
  2. Stretching to parent card's width/height messes with the border during animation
  */
  position: absolute;
  border-radius: 12px;
  border-color: black;
  border-style: solid;
  border-width: 3px;
  background-color: white;

  z-index: -1;

  /* The followingvalues will be overridden by inline style when the card moves toward a deck*/
  top: 0;
  width: 100%;
  height: 100%;
}

.main-section {
  height: auto;
  max-width: 30rem;

  display: flex;
  flex-direction: column;
  margin: 0 auto;
}

.img {
  display: block;
  height: 18rem;

  width: 100%;

  &[data-state="moving"] {
    position: absolute;
  }
}

/* **************** */
.question {
  margin: 0.5rem 0 0 0;
  visibility: visible;
  &[data-state="gone"] {
    visibility: hidden;
  }
}

.choices {
  display: block;
  padding-inline-start: 0px;
  list-style: none;
  display: block;

  &[data-state="moving"] {
    opacity: 0;
  }
}

.choice-li {
  display: flex;
  align-items: center;
  border: 2px solid $color;
  border-radius: 8px;
  box-shadow: 0 5px 8px rgba(0, 0, 0, 0.3);

  margin-bottom: 0.5rem;
  &:last-child {
    margin-bottom: 0;
  }

  &[data-bg-color="green"] {
    background-color: #41904e;
    border-color: #41904e;
  }

  &[data-bg-color="primary"] {
    background-color: $color;
  }

  &[data-state="hoverable"]:hover {
    background-color: rgba($color, 0.3);
  }
}

.choice-text {
  cursor: pointer;
  display: block;
  user-select: none;
  background-color: transparent;
  margin-bottom: 4px;
  padding: 0 1rem;

  font-size: $choice-font-size;
  font-weight: 700;

  color: black;

  &[data-color="white"] {
    color: white;
  }
}

.choice-alphabet {
  cursor: pointer;

  user-select: none;

  width: 2.2rem;
  height: 2.2rem;
  font-size: $choice-font-size - 0.5rem;
  font-weight: 700;

  justify-content: center;
  align-items: center;
  border-radius: 100%;
  text-align: center;
  display: flex;

  color: $color;

  &[data-color="white"] {
    color: white;
  }

  &[data-color="black"] {
    color: black;
  }
}

.spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.progress-bar-wrapper {
  &[data-hidden] {
    visibility: hidden;
  }
}

.next-button {
  cursor: pointer;
  height: 2rem;
  padding: 0 0 0 0;
  font-size: 1.5rem;
  outline: none;
  box-shadow: 0 5px 8px rgba(0, 0, 0, 0.3);
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  background-color: rebeccapurple;
  color: white;

  position: absolute;
  bottom: 0.5rem;
  right: 0.5rem;
}
