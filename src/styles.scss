$body-bg-color: darken(white, 15%);

* {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  background-color: $body-bg-color;
  margin: 0;
}

#root {
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: 0.5rem;
  height: 100%;
  width: 100%;
}

.top-bar-container {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-bottom: 0.5rem;
}

.top-bar {
  width: 100%;
  max-width: 30rem;
  display: flex;
  justify-content: space-between;
}

%deck {
  height: 6rem;
  max-height: 100%;
  min-height: 2rem;
  width: 6rem;
  max-width: 100%;
  min-width: 2rem;
}

.all {
  @extend %deck;
  color: grey;
}

.success {
  @extend %deck;
  color: green;
  &[data-state="consuming"] {
    transform: scale(1.2);
    opacity: 0.5;
  }
}

.fail {
  @extend %deck;
  color: red;
  &[data-state="consuming"] {
    transform: scale(1.2);
    opacity: 0.5;
  }
}

@keyframes slideAndFadeIn {
  from {
    opacity: 0;
    transform: translateX(-60px);
  }
  to {
    opacity: 1;
  }
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: auto;
  width: 100%;
  max-width: 30rem;
  padding: 1.5rem;

  &[data-state="initial"] {
    position: relative;
    animation: 1s slideAndFadeIn;
  }
}

.card-background {
  /* The commented out properties should solve issues */
  /* 
  1. Parent card has `padding` that influences this background element's top position
  2. Stretching to parent card's width/height messes with the border during animation
  */
  position: absolute;
  // border-radius: 8px;
  background-color: white;
  z-index: -1;
  &[data-state="initial"] {
    top: 0;
    width: 100%;
    height: 100%;
  }
}

.flip-content-wrapper {
  height: auto;

  display: flex;
  justify-content: center;
}

.img {
  display: block;
  height: 18rem;

  width: 100%;

  &[data-state="moving"] {
    visibility: hidden;
  }
}

/* **************** */

.choices {
  display: block;
  padding-inline-start: 0px;
  list-style: inside;
  list-style-type: decimal;
  display: block;

  &[data-state="moving"] {
    opacity: 0;
  }

  & > li {
    cursor: pointer;
    user-select: none;
    color: black;
    background-color: transparent;
    border-radius: 6px;
    border: 2px solid black;
    margin-bottom: 4px;
    padding: 0 1rem;

    font-size: 2rem;
  }

  & > li:hover {
    background-color: darken(white, 25%);
  }
}

.spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
